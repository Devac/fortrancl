= Modules =

All the FortranCL interface is contained in the `cl` Fortran 90 module.

= Datatypes =

The following are Fortran datatypes that directly map to OpenCL C types.

  * `cl_command_queue`
  * `cl_context`
  * `cl_device_id`
  * `cl_event`
  * `cl_kernel`
  * `cl_mem`
  * `cl_platform_id`
  * `cl_program`
  * `cl_sampler`

The OpenCL [http://www.khronos.org/registry/cl/sdk/1.1/docs/man/xhtml/enums.html enumerated types] are mapped to Fortran integers.

= CL interface procedures =

These are the functions or subroutines from FortranCL that correspond to OpenCL functions.

The last argument of all procedures is the `integer` errcode_ret. If the output value is `CL_SUCCESS`, the call was successful, otherwise the value indicate the error.

  * [clBuildProgram]
  * [clCreateBuffer]
  * [clCreateCommandQueue]
  * [clCreateContext]
  * [clCreateKernel]
  * [clCreateProgramWithSource]
  * [clEnqueueNDRangeKernel]
  * [clEnqueueReadBuffer]
  * [clEnqueueWriteBuffer]
  * [clFinish]
  * [clGetDeviceIDs]
  * [clGetDeviceInfo]
  * [clGetPlatformIDs]
  * [clGetPlatformInfo]
  * [clGetProgramBuildInfo]
  * [clGetKernelWorkGroupInfo]
  * [clReleaseCommandQueue]
  * [clReleaseContext]
  * [clReleaseKernel]
  * [clReleaseMemObject]
  * [clReleaseProgram]
  * [clSetKernelArg]
  * [clSetKernelArgLocal]

= Additional functions =
  * [cl_bool]: Returns a CL boolean value, CL_TRUE or CL_FALSE, from a Fortran logical.